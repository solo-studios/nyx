[versions]
kotlin = "1.9.24"
kotlin-plugin = "2.0.20"
kotlinx-serialization = "1.6.3"

dokka = "2.0.0-Beta"

axion-release = "1.18.8"

nyx = "0.3.0-SNAPSHOT"

gradle-publish = "1.3.0"

allure-gradle = "2.12.0"

freefair-sass = "8.10.2"

apache-commons-text = "1.12.0"

guava = "32.1.3-jre"
guava-kotlin = "0.1.0"

slf4k = "0.5.3"

quilt-loom = "1.7.3"

fabric-loom = "1.8.10"

architectury = "3.4.159"
architectury-loom = "1.7.413"

neogradle = "7.0.165"

github-release = "2.5.2"

modrinth-minotaur = "2.8.7"

gradleplugins = "1.9.0"

maven = "3.9.9"

fuel = "2.3.1"

arrow = "1.2.4"

junit-jupiter = "5.11.0"
junit-launcher = "1.11.0"

kotest = "5.9.1"
kotest-allure = "1.4.0"

[plugins]
## Kotlin
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
## Kotlin all-open compiler plugin
kotlin-allopen = { id = "org.jetbrains.kotlin.plugin.allopen", version.ref = "kotlin" }
## Kotlin
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
## Dokka
dokka = { id = "org.jetbrains.dokka", version.ref = "dokka" }

## Axion release plugin
### Gradle release and version management plugin.
axion-release = { id = "pl.allegro.tech.build.axion-release", version.ref = "axion-release" }

gradle-plugin-java = { id = "dev.gradleplugins.java-gradle-plugin", version.ref = "gradleplugins" }
gradle-plugin-development = { id = "dev.gradleplugins.gradle-plugin-development", version.ref = "gradleplugins" }
gradle-plugin-unit-test = { id = "dev.gradleplugins.gradle-plugin-unit-test", version.ref = "gradleplugins" }
gradle-plugin-functional-test = { id = "dev.gradleplugins.gradle-plugin-functional-test", version.ref = "gradleplugins" }

## Nyx
nyx = { id = "ca.solo-studios.nyx", version.ref = "nyx" }

## Gradle publishing plugin
gradle-publish = { id = "com.gradle.plugin-publish", version.ref = "gradle-publish" }

allure-gradle = { id = "io.qameta.allure", version.ref = "allure-gradle" }

sass-base = { id = "io.freefair.sass-base", version.ref = "freefair-sass" }

[libraries]
## Kotlin stdlib
kotlin-stdlib = { group = "org.jetbrains.kotlin", name = "kotlin-stdlib", version.ref = "kotlin" }

## Kotlin gradle plugin
kotlin-plugin = { group = "org.jetbrains.kotlin", name = "kotlin-gradle-plugin", version.ref = "kotlin-plugin" }

## kotlinx.serialization
kotlinx-serialization-core = { group = "org.jetbrains.kotlinx", name = "kotlinx-serialization-core", version.ref = "kotlinx-serialization" }
kotlinx-serialization-json = { group = "org.jetbrains.kotlinx", name = "kotlinx-serialization-json", version.ref = "kotlinx-serialization" }
kotlinx-serialization-properties = { group = "org.jetbrains.kotlinx", name = "kotlinx-serialization-properties", version.ref = "kotlinx-serialization" }

## Apache Commons Text
apache-commons = { group = "org.apache.commons", name = "commons-text", version.ref = "apache-commons-text" }

## Guava
guava = { group = "com.google.guava", name = "guava", version.ref = "guava" }
guava-kotlin = { group = "ca.solo-studios", name = "guava-kotlin", version.ref = "guava-kotlin" }

# SLF4K
## SLF4K is a set of kotlin extensions for SLF4J
slf4k = { group = "ca.solo-studios", name = "slf4k", version.ref = "slf4k" }

## fabric-loom & derivatives plugins
fabric-loom = { group = "fabric-loom", name = "fabric-loom.gradle.plugin", version.ref = "fabric-loom" }
quilt-loom = { group = "org.quiltmc.loom", name = "org.quiltmc.loom.gradle.plugin", version.ref = "quilt-loom" }
architectury = { group = "architectury-plugin", name = "architectury-plugin.gradle.plugin", version.ref = "architectury" }
architectury-loom = { group = "dev.architectury.loom", name = "dev.architectury.loom.gradle.plugin", version.ref = "architectury-loom" }

## Neogradle plugin
neogradle-userdev = { group = "net.neoforged.gradle.userdev", name = "net.neoforged.gradle.userdev.gradle.plugin", version.ref = "neogradle" }
neogradle-mixin = { group = "net.neoforged.gradle.mixin", name = "net.neoforged.gradle.mixin.gradle.plugin", version.ref = "neogradle" }

## Github release plugin
github-release = { group = "com.github.breadmoirai", name = "github-release", version.ref = "github-release" }

## Minotaur plugin
modrinth-minotaur = { group = "com.modrinth.minotaur", name = "Minotaur", version.ref = "modrinth-minotaur" }

## Dokka plugin
dokka-plugin = { group = "org.jetbrains.dokka", name = "org.jetbrains.dokka.gradle.plugin", version.ref = "dokka" }

## Maven artifact
maven-artifact = { group = "org.apache.maven", name = "maven-artifact", version.ref = "maven" }
maven-repository-metadata = { group = "org.apache.maven", name = "maven-repository-metadata", version.ref = "maven" }

## Fuel
fuel = { group = "com.github.kittinunf.fuel", name = "fuel", version.ref = "fuel" }

## Arrow
arrow-core = { group = "io.arrow-kt", name = "arrow-core", version.ref = "arrow" }
arrow-serialization = { group = "io.arrow-kt", name = "arrow-core-serialization", version.ref = "arrow" }

junit-jupiter-api = { group = "org.junit.jupiter", name = "junit-jupiter-api", version.ref = "junit-jupiter" }
junit-jupiter-engine = { group = "org.junit.jupiter", name = "junit-jupiter-engine", version.ref = "junit-jupiter" }
junit-platform-launcher = { group = "org.junit.platform", name = "junit-platform-launcher", version.ref = "junit-launcher" }

kotest-runner-junit5 = { group = "io.kotest", name = "kotest-runner-junit5", version.ref = "kotest" }
kotest-framework-datatest = { group = "io.kotest", name = "kotest-framework-datatest", version.ref = "kotest" }
kotest-assertions-core = { group = "io.kotest", name = "kotest-assertions-core", version.ref = "kotest" }
kotest-assertions-json = { group = "io.kotest", name = "kotest-assertions-json", version.ref = "kotest" }
kotest-property = { group = "io.kotest", name = "kotest-property", version.ref = "kotest" }
kotest-extensions-jvm = { group = "io.kotest", name = "kotest-extensions-jvm", version.ref = "kotest" }
kotest-extensions-htmlreporter = { group = "io.kotest", name = "kotest-extensions-htmlreporter", version.ref = "kotest" }
kotest-extensions-junitxml = { group = "io.kotest", name = "kotest-extensions-junitxml", version.ref = "kotest" }
kotest-extensions-allure = { group = "io.kotest.extensions", name = "kotest-extensions-allure", version.ref = "kotest-allure" }

[bundles]
kotlinx-serialization = [
    "kotlinx-serialization-core",
    "kotlinx-serialization-json",
]

loom = [
    "fabric-loom",
    "quilt-loom",
    "architectury",
    "architectury-loom",
]

neogradle = [
    "neogradle-mixin",
    "neogradle-userdev",
]

maven = [
    "maven-artifact",
    "maven-repository-metadata",
]

arrow = [
    "arrow-core",
    "arrow-serialization",
]

junit = [
    "junit-jupiter-api",
    "junit-jupiter-engine",
    "junit-platform-launcher",
]

kotest = [
    "kotest-runner-junit5",
    "kotest-framework-datatest",
    "kotest-assertions-core",
    "kotest-assertions-json",
    "kotest-property",
    "kotest-extensions-jvm",
    "kotest-extensions-htmlreporter",
    "kotest-extensions-junitxml",
    "kotest-extensions-allure",
]
